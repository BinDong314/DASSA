#
# Author Bin Dong Aug 7 2021
# This file demonstrates the usage of config file for compress.cpp
#
# Note: 
#  Each config file starts with the "[parameter]"
#  The comment lines starting with "#" ";" and "%" will be skipped 
#  The ";" can also be used to comment the line at the end
#
#  In the blow text,
#  -- I will use the "#" to comment a group of lines.
#     We may have three groups, input parameter, output parameter and runtime parameter.
#      
#  -- I will use the ";" to comment each line
#
# Also, all parameters have default values (even for the input file)
#       So, some missing will not report the error. 
#       Todo: we may classify the parameter as optional ones or essential ones
#
#

[parameter]

#############################
#   Input data's parameters #
#############################



is_compression = true ;
compression_method_name = 62016 
                      ; TurboPFOR 62016;  0, 1, 30000, 11648 : 10 
                      ; ZSTD: 32015; 9 
                      ; H5Z_FILTER_DEFLATE ; 9
                      ; H5Z_FILTER_SZIP

compression_method_parameter = 0, 1, 60000, 11648


is_compression_chunk_size = true;
compression_chunk_size = 60000, 11648;

is_column_vector =  true;
is_input_single_file = false    ; true / false (default),
input_dir_file = /Users/dbin/work/dassa/sac-10-files-h5
 ; /Users/dbin/work/dassa/sac-10-files-h5/westSac_180104233031.tdms.h5
 ; /Users/dbin/work/soft/HDF5Plugin-Zstandard/DF__UTC_20201112_000932.602.h5
 ; /Users/dbin/work/dassa/sac-10-files-h5/westSac_180104233031.tdms.h5
 ; /Users/dbin/work/soft/HDF5Plugin-Zstandard/DF__UTC_20201112_000932.602.h5
                                ; directory info when is_input_single_file = false
                                ; file info when is_input_single_file = true
                                ; better to have full path from /
input_file_type = EP_HDF5       ; EP_HDF5(default), EP_TDMS 
                                ; File type for the input 
input_dataset=/Acoustic         ; dataset name in HDF5, use (h5dump -A) to get it
                                ; Not used for EP_TDMS

n_files_to_concatenate = 1 ; the number of files to concatenate
                           ; only works when input is a directory
                           ; 1 : not to concatenate
                           ; 2 : concatenate every two files ...
                           ; Note: better not to have leftover 

is_input_search_rgx = false             ; true / false(default) 
input_search_rgx = (.*?)[123](\.tdms)   ; filter the input file names as input
                                        ; See : https://www.cplusplus.com/reference/regex/ECMAScript/
                                        ; See is_channel_range for a simple way to do it 

is_file_range = false      ; false or 0,  true/1 (by default 0) 
                           ; only works when  is_input_single_file = flase, i.e., a directory
                           ; pick the [file_range_start_index]th file to  [file_range_end_index]th file
                           ; All files are sorted by the filenames (kind of time order)
file_range_start_index = 0 ; Note: zero based and inclusive
file_range_end_index   = 4


################################
#      Runtime parameters      #
################################


#####################################
#        Output data's parameters   #
#####################################
is_output_single_file = false              ; true / false(default)
output_type = EP_HDF5                     ; only takes EP_HDF5 now
output_file_dir = /Users/dbin/work/dassa/sac-10-files-h5-compress
                                          ; when is_output_single_file = true,   it points to a file
                                          ; when is_output_single_file = false,  it points to a directory
output_dataset = /Acoustic                ; dataset for output file 


is_dir_output_match_replace_rgx = false          ; true / false(default), only works in directory mode
                                                 ; whether it has a way to auto generate the output file 
                                                 ; name from the input file name
output_file_regex_match = ^(.*)\.h5$             ; regex pattern to match original file name
output_file_regex_replace = $1-decimation.h5     ; regex pattern to replace original file name


